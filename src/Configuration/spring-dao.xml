<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 整合mybatis过程 -->
    <!-- 1.配置数据库相关参数properties -->
    <context:property-placeholder location="classpath:Configuration/jdbc.properties"/>

    <!-- 2.数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">

        <property name="driverClass">
            <value>${jdbc.driver}</value>
        </property>

        <property name="jdbcUrl">
            <value>${jdbc.url}</value>
        </property>

        <property name="user">
            <value>${jdbc.username}</value>
        </property>

        <property name="password">
            <value>${jdbc.password}</value>
        </property>

        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize">
            <value>30</value>
        </property>

        <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize">
            <value>3</value>
        </property>

        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime">
            <value>60</value>
        </property>

        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement">
            <value>2</value>
        </property>


    </bean>

    <!-- 3.配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>

        <!-- 配置MyBatis全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:Configuration/mybatis-config.xml"/>

        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="DAO.Entity"/>

        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:DAO/Mapper/*.xml"/>
            <!--<list>-->
                <!--<value>classpath:DAO/Mapper/UserMapper.xml</value>-->
                <!--<value>classpath:DAO/Mapper/RelationMapper.xml</value>-->
                <!--<value>classpath:DAO/Mapper/MsgRecordMapper.xml</value>-->
                <!--<value>classpath:DAO/Mapper/GroupMapper.xml</value>-->
                <!--<value>classpath:DAO/Mapper/ChannelMapper.xml</value>-->
                <!--<value>classpath:DAO/Mapper/ChannelMemMapper.xml</value>-->
            <!--</list>-->

    </bean>

    <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>

        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="DAO.Mapper"/>

    </bean>


    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean" scope="singleton">
        <property name="mapperInterface" value="DAO.Mapper.UserMapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
    
    <bean id="msgRecordMapper" class="org.mybatis.spring.mapper.MapperFactoryBean" scope="singleton">
        <property name="mapperInterface" value="DAO.Mapper.MsgRecordMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>


    <bean id="gMapper" class="org.mybatis.spring.mapper.MapperFactoryBean" scope="singleton">
        <property name="mapperInterface" value="DAO.Mapper.GroupMemMapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <bean id="cMapper" class="org.mybatis.spring.mapper.MapperFactoryBean" scope="singleton">
        <property name="mapperInterface" value="DAO.Mapper.ChannelMemMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

</beans>